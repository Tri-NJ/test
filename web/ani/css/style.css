@charset "UTF-8";
@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR&display=swap');
/* style태그 내에 있는 @import를 css에 넣으면 결국! 똑같다  */

* {
    margin: 0;
    padding: 0;
}

body {
    background-color: lightgray;
}

.box1 {
    background-color: azure;
    margin-top: 100px;
}

.box1 .child {
    font-family: 'Nanum Pen Script', cursive;
    width: 300px;
    background-color: deeppink;
    margin: auto;
    padding: 30px 0;
    font-size: 30px;
    color: #fff;
    font-weight: bold;
    text-align: center;
    border-radius: 50%;
    /* 모서리에 있는 원의 반지름이 20px, 50%로 하면 원이 됨(50 이상의 수치는 의미가 없는듯?*/
    /* border: 10px solid deeppink; */
    /* border 같은 색으로 주면 티 안 남...  */
    /* transition-property: background-color;
    transition-duration: 0.3s;
    transition-delay: 0.5s;
    transition-timing-function: cubic-bezier(0.85, 1.18, 0.3, -0.19); /* 바뀌는 속도.. 이징 기능. 크롬 개발자모드에서 곡선 조정 가능.. 그리고 이걸 압축해서 적음!*/
    /* transition: background-color 0.3s 0.5s ease, transform 0.4s 0.8s ease;
    /* duration과 delay 값을 헷갈리지말자!! 뒤에 나오는 게 delay임!!!!!
    여러 변화에 대해 얘기할때는 ,로 나누기 */
    /* transition: all 0.3s 0.2s ease; */
    transition: 0.3s 0.2s ease;
    /* 주의! 시간이 빠지면 애니메이션이 안 됨!!  */

}

.box1:hover .child {
    transform: translateY(-30px);
    /* 위의 트랜지션이 bgc에만 적용돼서 그렇다... 그래서 또 써줬다... */
    background-color: blueviolet;
}

.box2 {
    font-family: 'Noto Sans KR', sans-serif;
    width: 400px;
    margin: 50px auto 0;
    background-color: floralwhite;
    color: #222;
    text-align: center;
    line-height: 2.5;
    overflow: hidden;
}

.box2 p {
    transform: translateX(-100%);
    /* block요소일 경우 position이 없어도 이동 가능 */
}

.box2 p.one {
    font-weight: 100;
    transition-delay: 0.3s;
}

.box2 p.two {
    font-weight: 900;
    transition-delay: 0.8s;

}

.box2 p.three {
    font-weight: 700;
    transition-delay: 1.3s;

}


.box2:hover p {
    transform: translateX(0);

}


.box3{
    background-color:mediumslateblue;
    font-size: 30px; /* fz하면 f온트사이z나옴 */
    color: #fff;
    position: relative;
    width: 100px; height: 100px;
    text-align: center;
    line-height: 100px;
    margin-top: 50px;

    animation-name: box_ani; /* 애니메이션의 이름 */
    animation-duration: 1s; /* 실행하는데 걸리는 시간 - 지속시간 */
    animation-iteration-count: 3;/* 반복 횟수 */
    animation-direction: alternate-reverse; /* 애니메이션의 방향. 기본값은 normal.
    alternate: 정방향 > 역방향 > 정방향 > 역방향 > … reverse하면 역 > 정 > 역 > 정 */
    animation-delay: 0.3s;
    animation-timing-function: linear;
    animation-fill-mode:both;
    /* 애니메이션의 처음과 끝의 상태
    forwards: 끝난 상태에서 정지
    backwards: t시작을 keyframes의 0% 상태부터 시작 > 애니메이션 시작위치와 box 위치가 달라서 튕기는게 없어짐
    both: 둘다 적용
     */
}

@keyframes box_ani{
    /* 위의 animation name에 입력한 것과 같은 이름의 animation을 정의해줘야함(키프레임으로?)
    from{left: 0px; margin-left: 500px;} 
    시작지점
    to{left: 400px; margin-left: 400px;}  도착지점, position이 없으면 left/top 같은 값으로 이동 불가. 정 쓸거면 trnsform:translate로 가능 */
    0%{left: 0px;}
    100%{left: 100px;}
    
}
 /*from-to가 아니라 0% 50% 10% 같은 식으로 쓸 수 있다. */

 .box4{
    background-color:hotpink;
    font-size: 30px; 
    color: #fff;
    position: relative;
    width: 100px; height: 100px;
    text-align: center;
    line-height: 100px;
    margin-top: 50px;
/* 
    animation-name: box_ani2;
    animation-duration: 1s;
    animation-iteration-count: 1;
    animation-direction: normal;
    animation-fill-mode: both;
    animation-delay: 1s;
    animation-timing-function: linear; */

   animation: box_ani2 1s linear 0.5s 3 reverse both;
}

@keyframes box_ani2{
    0%{transform: translate(0,0);}
    25%{transform: translate(200px,0);}
    50%{transform: translate(200px,200px);}
    75%{transform: translate(0,200px);}
    100%{transform: translate(0,0);;}
}


.box5>div{
    background-color: #fff;
    width: 48%;
    height: 300px;
    float: left;
}

.box5{
    width: 1000px;
    height: 300px;
    background-color: aquamarine;
    padding: 20px;
    margin: 0 auto;
    perspective: 600px; /*이게 카메라임?*/
}
.box5>div.child_1{
    margin-right: 2%;
    position: relative;
    transform-style: preserve-3d; /* 3d처럼 돌아가는데 돌리면 부모한테 묻힘 > 당겨올 필요가 있다.... > ro를 translateZ를 통해 당겨온다 */
}

.box5>div.child_1 .ro{
    background-color: lightblue;
    position: absolute;
    left: 55%; top: 35%; /* 없으면 위치 튈 수도 있음! */
    padding: 20px 30px;
    font-size: 40px;
    transform-origin: left center; /* 기준으로 삼는 축 */
    transform: translatez(300px) rotateY(45deg); /* deg: degree: 각도 
    x축:좌우 y축:위아래 z축: 앞뒤 */
}


.box5>div.child_2{
    perspective: 600px;
    position: relative;
}
.box5>div.child_2 .top{
    position: absolute;
    left: 50%; top: 50%; transform: translate(-50%,-50%); 
    font-size: 30px;
    font-weight: bold;
    text-align: center;
    color: #222;
    transform-style: preserve-3d; /* 부모한테 줄수있으면 부모한테 줄것 다른 중간단계 애들이나... */

}

.box5>div.child_2 .ro{}

.box5>div.child_2 .top div{
    transform: rotateX(30deg) translateY(100%);
    transform-origin: center top;
    opacity: 0;
    transition: 0.8s cubic-bezier(0, 0.76, 0.19, 1.02);
}

.box5>div.child_2:hover .top div{
    opacity: 1;
    transform: none; /* transform을 없앰 > 각도를 없애면서 굴러옴? */
    transition-delay: 0.2s;
}

.box5>div.child_2:hover .top div:first-child{
    /* top내의 div중 첫째 호출 */

}
.box5>div.child_2:hover .top div:last-child{
    transition-delay: 0.4s;
}



.box5::after{
    content: "";
    clear: both;
    display: block;
    
}